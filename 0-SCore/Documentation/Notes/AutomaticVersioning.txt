Automatic Version incrementing using Visual Studio, using In-Place compile

Overview: 

Using the Directory.Build.targets file located in the Tools folder, there is a PostBuildEvent there that will attempt to update the ModInfo.xml in the root
of the Project Folder with the AssemblyVersion. Each time you do a Visual Studio build, the number will increment.

You may customize your version number. My prefered method is the following format:

    Major.Minor.Defect.Build

    Major:  The Main Alpha Version: 19, 20, 21
    Minor:  Release from the Fun Pimps:  1, 2
    Defect: Significant release to the mod
    Build:  General rebuilds for testing, etc.

    20.1.2.2344:  Mod was build against Alpha 20.1, my 2nd general release. The last digit is not significant, as its generated by Visual Studio to be unique.

Requirements:  
    Tools folder from the SphereII.Mods from https://github.com/SphereII/SphereII.Mods/


To enable, perform the following steps in Visual Studio:

Under Properties, edit AssemblyInfo.cs. 

Edit this line to look similar. The number with the astrix will be the number that changes per build.
	[assembly: AssemblyVersion("20.0.1.*")]

Delete this line:
	[assembly: AssemblyFileVersion("1.0.0.0")]

Right click on the Visual Studio Project and click on Open Folder in Explorer

Edit the project.csproj using Notepad++

Look for the following entry:
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />

Copy and paste this under that line:

  <PropertyGroup>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <Deterministic>false</Deterministic>
  </PropertyGroup>

  <!-- If you have your sln file in the Mods folder's root, the Tools folder will be off that. Otherwise, adjust the path -->
  <Import Project="$(SolutionDir)\Tools\Directory.Build.targets" Condition="Exists('$(SolutionDir)\Tools\Directory.Build.targets')" />


